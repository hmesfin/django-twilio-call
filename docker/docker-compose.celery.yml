"""Docker Compose configuration for Celery workers and monitoring."""
version: '3.8'

services:
  # Redis for Celery broker and result backend
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: django_twilio_call
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Django web application
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/django_twilio_call
      - DJANGO_SETTINGS_MODULE=django_twilio_call.settings
    ports:
      - "8000:8000"
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery worker for high-priority real-time tasks
  celery-worker-realtime:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/django_twilio_call
      - DJANGO_SETTINGS_MODULE=django_twilio_call.settings
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      celery -A django_twilio_call.celery worker
      --loglevel=info
      --queues=webhooks,realtime,notifications
      --concurrency=4
      --prefetch-multiplier=1
      --max-tasks-per-child=1000
      --hostname=realtime-worker@%h

  # Celery worker for recording and analytics processing
  celery-worker-processing:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/django_twilio_call
      - DJANGO_SETTINGS_MODULE=django_twilio_call.settings
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      celery -A django_twilio_call.celery worker
      --loglevel=info
      --queues=recordings,analytics
      --concurrency=2
      --prefetch-multiplier=1
      --max-tasks-per-child=500
      --hostname=processing-worker@%h

  # Celery worker for reports and exports (CPU intensive)
  celery-worker-reports:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/django_twilio_call
      - DJANGO_SETTINGS_MODULE=django_twilio_call.settings
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      celery -A django_twilio_call.celery worker
      --loglevel=info
      --queues=reports,exports
      --concurrency=1
      --prefetch-multiplier=1
      --max-tasks-per-child=100
      --hostname=reports-worker@%h

  # Celery worker for maintenance and low-priority tasks
  celery-worker-maintenance:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/django_twilio_call
      - DJANGO_SETTINGS_MODULE=django_twilio_call.settings
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      celery -A django_twilio_call.celery worker
      --loglevel=info
      --queues=maintenance,email,retries
      --concurrency=2
      --prefetch-multiplier=1
      --max-tasks-per-child=1000
      --hostname=maintenance-worker@%h

  # Celery Beat scheduler for periodic tasks
  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/django_twilio_call
      - DJANGO_SETTINGS_MODULE=django_twilio_call.settings
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
      - celery_beat_data:/app/celerybeat-schedule
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      celery -A django_twilio_call.celery beat
      --loglevel=info
      --schedule=/app/celerybeat-schedule
      --pidfile=/tmp/celerybeat.pid

  # Flower for Celery monitoring
  celery-flower:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    ports:
      - "5555:5555"
    volumes:
      - ../django_twilio_call:/app/django_twilio_call
    depends_on:
      redis:
        condition: service_healthy
    command: >
      celery -A django_twilio_call.celery flower
      --address=0.0.0.0
      --port=5555
      --broker=redis://redis:6379/0
      --basic_auth=admin:admin123

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  redis_data:
  postgres_data:
  celery_beat_data: