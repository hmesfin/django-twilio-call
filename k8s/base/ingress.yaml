apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: django-twilio-call-ingress
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: ingress
  annotations:
    # Nginx Ingress Controller annotations
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"

    # Security headers
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin";

    # CORS configuration
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://yourdomain.com,https://app.yourdomain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Request-ID: $req_id";

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.yourdomain.com
    - webhooks.yourdomain.com
    secretName: django-twilio-call-tls
  rules:
  - host: api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: django-web-service
            port:
              number: 8000
  - host: webhooks.yourdomain.com
    http:
      paths:
      - path: /webhooks
        pathType: Prefix
        backend:
          service:
            name: django-web-service
            port:
              number: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flower-ingress
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: monitor
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: flower-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Flower'
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - flower.yourdomain.com
    secretName: flower-tls
  rules:
  - host: flower.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flower-service
            port:
              number: 5555

---
apiVersion: v1
kind: Secret
metadata:
  name: flower-auth
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: monitor
type: Opaque
data:
  # htpasswd generated: admin:$2y$10$example
  auth: YWRtaW46JDJ5JDEwJGV4YW1wbGU=