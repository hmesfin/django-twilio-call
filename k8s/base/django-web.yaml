apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-web
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: django-twilio-call
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: django-twilio-call
        app.kubernetes.io/component: web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: django-web
        image: ghcr.io/your-org/django-twilio-call:latest
        imagePullPolicy: Always
        command: ["web"]
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: django-twilio-call-config
        - secretRef:
            name: django-twilio-call-secrets
        volumeMounts:
        - name: media-storage
          mountPath: /app/media
        - name: static-storage
          mountPath: /app/staticfiles
        - name: logs
          mountPath: /var/log/django
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      initContainers:
      - name: django-migrate
        image: ghcr.io/your-org/django-twilio-call:latest
        command: ["migrate"]
        envFrom:
        - configMapRef:
            name: django-twilio-call-config
        - secretRef:
            name: django-twilio-call-secrets
        volumeMounts:
        - name: logs
          mountPath: /var/log/django
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      - name: django-collectstatic
        image: ghcr.io/your-org/django-twilio-call:latest
        command: ["collectstatic"]
        envFrom:
        - configMapRef:
            name: django-twilio-call-config
        - secretRef:
            name: django-twilio-call-secrets
        volumeMounts:
        - name: static-storage
          mountPath: /app/staticfiles
        - name: logs
          mountPath: /var/log/django
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-pvc
      - name: static-storage
        emptyDir: {}
      - name: logs
        emptyDir: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: efs-sc

---
apiVersion: v1
kind: Service
metadata:
  name: django-web-service
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: web
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: web

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: django-web-hpa
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: django-web
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60