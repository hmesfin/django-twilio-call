apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: django-twilio-call
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: django-twilio-call
        app.kubernetes.io/component: worker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9540"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: celery-worker
        image: ghcr.io/your-org/django-twilio-call:latest
        imagePullPolicy: Always
        command: ["worker"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: CELERY_WORKER_QUEUES
          value: "celery,twilio,high_priority"
        envFrom:
        - configMapRef:
            name: django-twilio-call-config
        - secretRef:
            name: django-twilio-call-secrets
        volumeMounts:
        - name: media-storage
          mountPath: /app/media
        - name: logs
          mountPath: /var/log/django
        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - django_twilio_call
            - inspect
            - ping
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - celery
            - -A
            - django_twilio_call
            - inspect
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-pvc
      - name: logs
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: scheduler
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: django-twilio-call
      app.kubernetes.io/component: scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: django-twilio-call
        app.kubernetes.io/component: scheduler
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: celery-beat
        image: ghcr.io/your-org/django-twilio-call:latest
        imagePullPolicy: Always
        command: ["beat"]
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: django-twilio-call-config
        - secretRef:
            name: django-twilio-call-secrets
        volumeMounts:
        - name: beat-schedule
          mountPath: /app/tmp
        - name: logs
          mountPath: /var/log/django
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: beat-schedule
        emptyDir: {}
      - name: logs
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: django-twilio-call
      app.kubernetes.io/component: monitor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: django-twilio-call
        app.kubernetes.io/component: monitor
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: flower
        image: ghcr.io/your-org/django-twilio-call:latest
        imagePullPolicy: Always
        command: ["flower"]
        ports:
        - containerPort: 5555
          name: flower
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        envFrom:
        - configMapRef:
            name: django-twilio-call-config
        - secretRef:
            name: django-twilio-call-secrets
        livenessProbe:
          httpGet:
            path: /
            port: 5555
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 5555
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: flower-service
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: monitor
spec:
  type: ClusterIP
  ports:
  - port: 5555
    targetPort: 5555
    protocol: TCP
    name: flower
  selector:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: monitor

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: celery-worker-hpa
  namespace: django-twilio-call
  labels:
    app.kubernetes.io/name: django-twilio-call
    app.kubernetes.io/component: worker
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: celery-worker
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60